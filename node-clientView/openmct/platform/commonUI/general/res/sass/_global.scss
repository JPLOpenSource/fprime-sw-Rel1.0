/*****************************************************************************
 * Open MCT, Copyright (c) 2014-2017, United States Government
 * as represented by the Administrator of the National Aeronautics and Space
 * Administration. All rights reserved.
 *
 * Open MCT is licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Open MCT includes source code licensed under additional open source
 * licenses. See the Open Source Licenses file (LICENSES.md) included with
 * this source code distribution or the Licensing information page available
 * at runtime from the About dialog for additional information.
 *****************************************************************************/
/************************** FONTS */
@font-face {
    /*
    * Use https://icomoon.io/app with icomoon-project-openmct-symbols-16px.json
    * to generate font files
    */
    font-family: 'symbolsfont';
    src: url($dirCommonRes + 'fonts/symbols/openmct-symbols-16px.eot');
    src: url($dirCommonRes + 'fonts/symbols/openmct-symbols-16px.eot?#iefix') format('embedded-opentype'),
    url($dirCommonRes + 'fonts/symbols/openmct-symbols-16px.woff') format('woff'),
    url($dirCommonRes + 'fonts/symbols/openmct-symbols-16px.ttf') format('truetype'),
    url($dirCommonRes + 'fonts/symbols/openmct-symbols-16px.svg') format('svg');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    /*
    * Use https://icomoon.io/app with icomoon-project-openmct-symbols-12px.json
    * to generate font files
    */
    font-family: 'symbolsfont 12px';
    src: url($dirCommonRes + 'fonts/symbols/openmct-symbols-12px.eot');
    src: url($dirCommonRes + 'fonts/symbols/openmct-symbols-12px.eot?#iefix') format('embedded-opentype'),
    url($dirCommonRes + 'fonts/symbols/openmct-symbols-12px.woff') format('woff'),
    url($dirCommonRes + 'fonts/symbols/openmct-symbols-12px.ttf') format('truetype'),
    url($dirCommonRes + 'fonts/symbols/openmct-symbols-12px.svg') format('svg');
    font-weight: normal;
    font-style: normal;
}

/************************** HTML ENTITIES */
a {
    color: $colorA;
    cursor: pointer;
    text-decoration: none;
    &:hover {
        color: $colorAHov;
    }
}

body, html {
    -webkit-font-smoothing: subpixel-antialiased;
    background-color: $colorBodyBg;
    color: $colorBodyFg;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 100%;
    font-weight: normal;
    height: 100%;
    width: 100%;
}

em {
    font-style: normal;
}

input, textarea {
    font-family: inherit;
    font-weight: inherit;
    letter-spacing: inherit;
}

h1, h2, h3 {
    letter-spacing: 0.04em;
    margin: 0;
}

h1 {
    font-size: 1.7em;
    font-weight: normal !important;
    letter-spacing: 0.04em;
    line-height: 120%;
    margin-bottom: 20px;
    margin-top: 0;
}

p {
    margin-bottom: $interiorMarginLg;
}

ol, ul {
    list-style: none;
    margin: 0;
    padding-left: 0;
}

mct-container {
    display: block;
}

.abs {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    height: auto;
    width: auto;
}

.code {
    font-family: "Lucida Console", monospace;
    font-size: 0.7em;
    line-height: 150%;
    white-space: pre;
}

.codehilite {
    @extend .code;
    background-color: rgba($colorBodyFg, 0.1);
    padding: 1em;
}

.disabled,
a.disabled {
    opacity: $controlDisabledOpacity;
    pointer-events: none !important;
    cursor: default !important;
}

.s-status-missing {
    // Labels. Expects .s-status-missing to be applied to mct-representation that contains
    // .t-object-label
    .t-object-label .t-item-icon:before {
        content: $glyph-icon-object-unknown;
    }

    // Item, grid item. Expects .s-status-missing to be applied to mct-representation that contains .item.grid-item
    .item .t-item-icon-glyph:before {
        content: $glyph-icon-object-unknown;
    }

    // Object header. Expects .s-status-missing to be applied to mct-representation.object-header
    &.object-header {
        .type-icon:before {
            content: $glyph-icon-object-unknown;
        }
    }

    // Tree item. Expects .s-status-missing to be applied to .tree-item,
    // and mct-representation.search-item
    &.tree-item,
    &.search-item {
        > .rep-object-label .t-item-icon:before {
            content: $glyph-icon-object-unknown;
        }
    }
}

.align-right {
    text-align: right;
}

.centered {
    text-align: center;
}

.ellipsis {
    @include ellipsize();
}

.scrolling,
.scroll {
    overflow: auto;
}

.vscroll {
    overflow-y: auto;
}

.slidable {
    cursor: move; // Fallback
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
    &.horz {
        cursor: col-resize;
    }
    &.vert {
        cursor: row-resize;
    }
}

.no-margin {
    margin: 0;
}

.ds {
    box-shadow: rgba(#000, 0.7) 0 4px 10px 2px;
}

.hide,
.hidden {
    display: none !important;
}

.hide-nice {
    opacity: 0;
    pointer-events: none;
}

.off {
    visibility: hidden;
    opacity: 0;
    height: 0;
    margin: 0;
    padding: 0;
    border: 0;
    margin: 0 !important;
}

.sep {
    color: rgba(#fff, 0.2);
}

.test-stripes {
    @include bgDiagonalStripes();
}

.test {
    @include test();
}
